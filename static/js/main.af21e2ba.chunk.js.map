{"version":3,"sources":["components/main/main.module.scss","components/navigation/navBar.module.scss","components/auth/auth.module.scss","components/own/ownRecipe.module.scss","redux/reducers/authReducer.js","api/edamamAPI.js","redux/reducers/mainReducer.js","redux/store/redux-store.js","components/auth/Auth.jsx","components/validation/validation.js","hoc/authorization/authorization.js","components/main/Main.jsx","components/navigation/Navbar.jsx","components/own/OwnRecipe.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","login","password","initialized","falseAttemptsCount","LOGIN","PASSWORD","LOGIN_SUBMIT","INCREMENT_FALSE_ATTEMPTS_COUNT","loginSubmitAC","toggle","type","authReducer","state","action","APP_KEY","BASEURL","recipeApi","mealName","fromItem","toItem","axios","count","setMealResultArray","moreResults","err","isFetching","isFetchingAC","mainReducer","payload","redusers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","connect","loginAC","passwordAC","incrementFalseAttemptsAC","props","useEffect","setTimeout","location","reload","to","className","style","authContainer","value","onChange","e","target","onClick","CORRECT","WRONG","disabled","mapStateToPropsForRedirect","withAuthRedirect","Component","mealNameChangeAC","getRecipesTHUNK","dispatch","getState","then","response","data","from","hits","more","setIncomingAC","catch","errors","message","console","log","mainContainer","searchContainer","placeholder","listsContainer","Navigation","navItem","link","activeClassName","activeLink","content","navBarContainer","ownRecipe","App","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.af21e2ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"main_mainContainer__k5gkf\",\"listsContainer\":\"main_listsContainer__vu3qd\",\"searchContainer\":\"main_searchContainer__2dO4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarContainer\":\"navBar_navBarContainer__2W2wx\",\"navItem\":\"navBar_navItem__bsIGM\",\"activeLink\":\"navBar_activeLink__2Dsy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authContainer\":\"auth_authContainer__11GTM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ownRecipe\":\"ownRecipe_ownRecipe__3xnCA\"};","const initialState = {\r\n  login: \"Bon\",\r\n  password: \"appetit\",\r\n  initialized: false,\r\n  falseAttemptsCount: 0,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        login: action.login,\r\n      };\r\n    case PASSWORD:\r\n      return {\r\n        ...state,\r\n        password: action.password,\r\n      };\r\n    case LOGIN_SUBMIT:\r\n      return {\r\n        ...state,\r\n        initialized: action.toggle,\r\n      };\r\n    case INCREMENT_FALSE_ATTEMPTS_COUNT:\r\n      return {\r\n        ...state,\r\n        falseAttemptsCount: (state.falseAttemptsCount += 1),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst LOGIN = \"LOGIN\";\r\nconst PASSWORD = \"PASSWORD\";\r\nconst LOGIN_SUBMIT = \"LOGIN_SUBMIT\";\r\nconst INCREMENT_FALSE_ATTEMPTS_COUNT = \"INCREMENT_FALSE_ATTEMPTS_COUNT\";\r\nexport const loginAC = (login) => ({ type: LOGIN, login });\r\nexport const passwordAC = (password) => ({ type: PASSWORD, password });\r\nexport const loginSubmitAC = (toggle) => ({ type: LOGIN_SUBMIT, toggle });\r\nexport const incrementFalseAttemptsAC = () => ({\r\n  type: INCREMENT_FALSE_ATTEMPTS_COUNT,\r\n});\r\n\r\nexport default authReducer;\r\n","import * as axios from \"axios\";\r\n\r\nconst APP_ID = \"ca77737b\";\r\nconst APP_KEY = \"8de8a047cbcb1268485e3c0cce18189f\t\";\r\nconst BASEURL = \"https://api.edamam.com/search?\";\r\n\r\nexport const recipeApi = {\r\n  getRecipe(mealName, fromItem = 0, toItem = 10) {\r\n    return axios.get(\r\n      `${BASEURL}q=${mealName}&app_id=${APP_ID}&app_key=${APP_KEY}&from=${fromItem}&to=${toItem}`\r\n    );\r\n  },\r\n};\r\n//rafce\r\n//response.data.hits.\r\n////hits is array\r\n//////recipe.calories\r\n//////recipe.image\r\n//////recipe.label(name)\r\n//////recipe.health(“vegan”, “vegetarian”, “paleo”, “dairy-free”, “gluten-free”, “wheat-free”, “fat-free”, “low-sugar”, “egg-free”, “peanut-free”, “tree-nut-free”, “soy-free”, “fish-free”, “shellfish-free” (labels are per serving))\r\n//////recipe.ingredients(obj[arr])\r\n//////recipe.totalWeight\r\n\r\n//https://api.edamam.com/search?q=chicken&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&from=0&to=3&calories=591-722&health=alcohol-free\"\r\n\r\n// try {\r\n//   recipeApi.getRecipe(\"pizza\", 10, 20).then((response) => {\r\n//     console.log(response.data);\r\n//   });\r\n// } catch (err) {\r\n//   console.log(err);\r\n// }\r\n","import { recipeApi } from \"./../../api/edamamAPI\";\r\n\r\nconst initialState = {\r\n  count: 0,\r\n  fromItem: 0,\r\n  setMealResultArray: [],\r\n  moreResults: true,\r\n  mealName: \"\",\r\n  toItem: 10,\r\n  err: \"\",\r\n  isFetching: false,\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"MEAL_NAME_CHANGE\":\r\n      return {\r\n        ...state,\r\n        mealName: action.mealName,\r\n      };\r\n    case \"TOGGLE_IS_FETCHING\":\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case \"SET_INCOMING_DATA\":\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case \"SET_ERROR\":\r\n      return {\r\n        ...state,\r\n        err: action.err,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst MEAL_NAME_CHANGE = \"MEAL_NAME_CHANGE\";\r\nexport const mealNameChangeAC = (mealName) => ({\r\n  type: MEAL_NAME_CHANGE,\r\n  mealName,\r\n});\r\n\r\nconst SET_ERROR = \"SET_ERROR\";\r\nconst setErrorAC = (err) => ({ type: SET_ERROR, err });\r\n\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst isFetchingAC = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\n\r\nconst SET_INCOMING_DATA = \"SET_INCOMING_DATA\";\r\nconst setIncomingAC = (\r\n  count,\r\n  fromItem,\r\n  setMealResultArray,\r\n  moreResults,\r\n  toItem\r\n) => ({\r\n  type: SET_INCOMING_DATA,\r\n  payload: {\r\n    count,\r\n    fromItem,\r\n    setMealResultArray,\r\n    moreResults,\r\n    toItem,\r\n  },\r\n});\r\n\r\n//const GET_RECIPES = \"GET_RECIPES\";\r\nexport const getRecipesTHUNK = () => (dispatch, getState) => {\r\n  let mealName = getState().mainReducer.mealName;\r\n  dispatch(isFetchingAC(true));\r\n  recipeApi\r\n    .getRecipe(mealName, 0, 10)\r\n    .then((response) => {\r\n      let { count, from, hits, more, to } = response.data;\r\n      dispatch(setIncomingAC(count, from, hits, more, to));\r\n      dispatch(isFetchingAC(false));\r\n    })\r\n    .catch((errors) => {\r\n      dispatch(setErrorAC(errors.message));\r\n    });\r\n};\r\n\r\nexport default mainReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport mainReducer from \"./../reducers/mainReducer\";\r\n\r\nlet redusers = combineReducers({\r\n  authReducer,\r\n  mainReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store = createStore(\r\n  redusers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect } from \"react\";\r\nimport style from \"./auth.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { validateLogin } from \"./../validation/validation\";\r\nimport {\r\n  loginAC,\r\n  passwordAC,\r\n  loginSubmitAC,\r\n  incrementFalseAttemptsAC,\r\n} from \"../../redux/reducers/authReducer\";\r\n\r\nconst Auth = (props) => {\r\n  useEffect(() => {\r\n    if (props.falseAttemptsCount === 3) {\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 3000);\r\n    }\r\n  }, [props.falseAttemptsCount]);\r\n  if (props.initialized) {\r\n    return <Redirect to={\"/main\"} />;\r\n  }\r\n  const handleLoginChange = (e) => {\r\n    props.loginAC(e.target.value);\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    props.passwordAC(e.target.value);\r\n  };\r\n  const handleLoginSubmit = () => {\r\n    validateLogin(\r\n      props.login,\r\n      props.password,\r\n      props.loginSubmitAC,\r\n      props.incrementFalseAttemptsAC\r\n    );\r\n    props.loginAC(\"\");\r\n    props.passwordAC(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={style.authContainer}>\r\n      <input type=\"text\" value={props.login} onChange={handleLoginChange} />\r\n      <input\r\n        type=\"password\"\r\n        value={props.password}\r\n        onChange={handlePasswordChange}\r\n      />\r\n      <button\r\n        onClick={handleLoginSubmit}\r\n        disabled={props.falseAttemptsCount === 3}\r\n      >\r\n        Log in\r\n      </button>\r\n      <div>\r\n        <h3>\r\n          <b>Login:</b> \"Bon\"\r\n        </h3>\r\n        <h3>\r\n          <b>Password:</b> \"appetit\"\r\n        </h3>\r\n      </div>\r\n      {props.falseAttemptsCount === 3 && <h1>WRONG LOGIN OR PASSWORD</h1>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.authReducer.initialized,\r\n  login: state.authReducer.login,\r\n  password: state.authReducer.password,\r\n  falseAttemptsCount: state.authReducer.falseAttemptsCount,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  loginAC,\r\n  passwordAC,\r\n  loginSubmitAC,\r\n  incrementFalseAttemptsAC,\r\n})(Auth);\r\n\r\n///http://www.recipepuppy.com/about/api/\r\n///http://www.recipepuppy.com/api/?i=onions,garlic&q=omelet&p=3\r\n","export const validateLogin = (login, password, CORRECT, WRONG) => {\r\n  const LOGIN = \"Bon\";\r\n  const PASSWORD = \"appetit\";\r\n  if (LOGIN === login && PASSWORD === password) {\r\n    CORRECT(true);\r\n  } else {\r\n    WRONG();\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  initialized: state.authReducer.initialized,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    return (\r\n      <div>\r\n        {!props.initialized ? (\r\n          <Redirect to={\"/login\"} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from \"react\";\r\nimport style from \"./main.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/authorization/authorization\";\r\nimport {\r\n  mealNameChangeAC,\r\n  getRecipesTHUNK,\r\n} from \"./../../redux/reducers/mainReducer\";\r\n\r\nconst Main = (props) => {\r\n  console.log(props.setMealResultArray);\r\n  const handleNameChange = (e) => {\r\n    props.mealNameChangeAC(e.target.value);\r\n  };\r\n  const handleMealSearch = () => {\r\n    if (props.mealName) {\r\n      props.getRecipesTHUNK();\r\n      props.mealNameChangeAC(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className={style.mainContainer}>\r\n      <div className={style.searchContainer}>\r\n        <input\r\n          type=\"text\"\r\n          value={props.mealName}\r\n          onChange={handleNameChange}\r\n          placeholder=\"You look hungry\"\r\n        />\r\n        <button onClick={handleMealSearch}> HUNT </button>\r\n      </div>\r\n      <div className={style.listsContainer}>\r\n        <div>1</div>\r\n        <div>2</div>\r\n        <div>3</div>\r\n        <div>4</div>\r\n        <div>5</div>\r\n        <div>6</div>\r\n        <div>7</div>\r\n        <div>8</div>\r\n        <div>9</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  mealName: state.mainReducer.mealName,\r\n  setMealResultArray: state.mainReducer.setMealResultArray,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { mealNameChangeAC, getRecipesTHUNK }),\r\n  withAuthRedirect\r\n)(Main);\r\n","import React from \"react\";\r\nimport style from \"./navBar.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginSubmitAC } from \"./../../redux/reducers/authReducer\";\r\n\r\nconst NavBar = (props) => {\r\n  const handleLogout = () => {\r\n    props.loginSubmitAC(false);\r\n  };\r\n  return (\r\n    <div className={style.navBarContainer}>\r\n      {props.initialized ? (\r\n        <span onClick={handleLogout}>Log out</span>\r\n      ) : (\r\n        <Navigation link=\"/login\" content=\"Login\" />\r\n      )}\r\n      <Navigation link=\"/main\" content=\"Main\" />\r\n      <Navigation link=\"/ownRecipe\" content=\"Own recipe\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    <div className={style.navItem}>\r\n      <NavLink to={props.link} activeClassName={style.activeLink}>\r\n        {props.content}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.authReducer.initialized,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginSubmitAC })(NavBar);\r\n","import React from \"react\";\r\nimport style from \"./ownRecipe.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/authorization/authorization\";\r\nimport { compose } from \"redux\";\r\n\r\nconst OwnRecipe = (props) => {\r\n  return <div className={style.ownRecipe}>own recipe</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  //initialized: state.authReducer.initialized,\r\n});\r\nexport default compose(\r\n  connect(mapStateToProps, {}),\r\n  withAuthRedirect\r\n)(OwnRecipe);\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"./components/auth/Auth\";\nimport Main from \"./components/main/Main\";\nimport NavBar from \"./components/navigation/Navbar\";\nimport OwnRecipe from \"./components/own/OwnRecipe\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route path=\"/login\" component={() => <Auth />} />\n        <Route path=\"/main\" component={() => <Main />} />\n        <Route path=\"/ownRecipe\" component={() => <OwnRecipe />} />\n      </Switch>\n    </div>\n  );\n}\n\n// const mapStateToProps = (state) => ({\n//   initialized: state.authReducer.initialized,\n// });\n// export default connect(mapStateToProps)(App);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/redux-store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}