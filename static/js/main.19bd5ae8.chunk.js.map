{"version":3,"sources":["components/navigation/navBar.module.scss","components/lists/lists.module.scss","components/auth/auth.module.scss","assets/images/logImage.jpg","components/main/main.module.scss","components/own/ownRecipe.module.scss","components/search/search.module.scss","components/header/header.module.scss","assets/Roboto/Roboto-Regular.ttf","redux/reducers/authReducer.js","api/edamamAPI.js","redux/reducers/mainReducer.js","redux/store/redux-store.js","components/auth/Auth.jsx","components/validation/validation.js","hoc/authorization/authorization.js","components/lists/ListItemsContainer.jsx","components/lists/Lists.jsx","components/main/Main.jsx","components/own/OwnRecipe.jsx","components/search/Search.jsx","components/navigation/Navbar.jsx","components/header/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","login","password","initialized","falseAttemptsCount","LOGIN","PASSWORD","LOGIN_SUBMIT","INCREMENT_FALSE_ATTEMPTS_COUNT","loginSubmitAC","toggle","type","authReducer","state","action","APP_KEY","BASEURL","recipeApi","mealName","fromItem","toItem","axios","count","mealResultArray","moreResults","err","isFetching","mealNameChangeAC","isFetchingAC","getRecipesTHUNK","dispatch","getState","mainReducer","then","response","data","from","hits","more","to","payload","setIncomingAC","catch","errors","message","redusers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","connect","loginAC","passwordAC","incrementFalseAttemptsAC","props","useEffect","setTimeout","location","reload","className","style","authContainer","imgInputContainer","inputContainer","value","onChange","e","target","placeholder","onClick","CORRECT","WRONG","disabled","logImageContainer","src","logImage","alt","centeredText","mapStateToPropsForRedirect","withAuthRedirect","Component","ListItemsContainer","recipe","image","label","calories","totalWeight","shareAs","ingredientLines","useState","setToggle","styles","listItemsContainer","mealImageContainer","mealIngredientsContainer","href","map","ingredient","key","uuidv4","Lists","recipes","console","log","listsContainer","mainContainer","ownRecipe","Search","searchContainer","Navigation","navItem","link","activeClassName","activeLink","content","navBarContainer","logoContainer","menuContainer","headerContainer","App","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.19bd5ae8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarContainer\":\"navBar_navBarContainer__2W2wx\",\"logoContainer\":\"navBar_logoContainer__2UwII\",\"menuContainer\":\"navBar_menuContainer__3p1tI\",\"navItem\":\"navBar_navItem__bsIGM\",\"activeLink\":\"navBar_activeLink__2Dsy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listsContainer\":\"lists_listsContainer__1RmSd\",\"listItemsContainer\":\"lists_listItemsContainer__3RaoM\",\"mealImageContainer\":\"lists_mealImageContainer__3Ynbi\",\"mealIngredientsContainer\":\"lists_mealIngredientsContainer__397mo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authContainer\":\"auth_authContainer__11GTM\",\"imgInputContainer\":\"auth_imgInputContainer__28mN_\",\"inputContainer\":\"auth_inputContainer__1OeX5\",\"logImageContainer\":\"auth_logImageContainer__26h4I\",\"centeredText\":\"auth_centeredText__2gHwC\"};","module.exports = __webpack_public_path__ + \"static/media/logImage.4bfe581a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"main_mainContainer__k5gkf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ownRecipe\":\"ownRecipe_ownRecipe__3xnCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"search_searchContainer__1tJwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"header_headerContainer__2L3NU\"};","module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.11eabca2.ttf\";","const initialState = {\r\n  login: \"Bon\",\r\n  password: \"appetit\",\r\n  initialized: false,\r\n  falseAttemptsCount: 0,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        login: action.login,\r\n      };\r\n    case PASSWORD:\r\n      return {\r\n        ...state,\r\n        password: action.password,\r\n      };\r\n    case LOGIN_SUBMIT:\r\n      return {\r\n        ...state,\r\n        initialized: action.toggle,\r\n      };\r\n    case INCREMENT_FALSE_ATTEMPTS_COUNT:\r\n      return {\r\n        ...state,\r\n        falseAttemptsCount: (state.falseAttemptsCount += 1),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst LOGIN = \"LOGIN\";\r\nconst PASSWORD = \"PASSWORD\";\r\nconst LOGIN_SUBMIT = \"LOGIN_SUBMIT\";\r\nconst INCREMENT_FALSE_ATTEMPTS_COUNT = \"INCREMENT_FALSE_ATTEMPTS_COUNT\";\r\nexport const loginAC = (login) => ({ type: LOGIN, login });\r\nexport const passwordAC = (password) => ({ type: PASSWORD, password });\r\nexport const loginSubmitAC = (toggle) => ({ type: LOGIN_SUBMIT, toggle });\r\nexport const incrementFalseAttemptsAC = () => ({\r\n  type: INCREMENT_FALSE_ATTEMPTS_COUNT,\r\n});\r\n\r\nexport default authReducer;\r\n","import * as axios from \"axios\";\r\n\r\nconst APP_ID = \"ca77737b\";\r\nconst APP_KEY = \"8de8a047cbcb1268485e3c0cce18189f\t\";\r\nconst BASEURL = \"https://api.edamam.com/search?\";\r\n\r\nexport const recipeApi = {\r\n  getRecipe(mealName, fromItem = 0, toItem = 10) {\r\n    return axios.get(\r\n      `${BASEURL}q=${mealName}&app_id=${APP_ID}&app_key=${APP_KEY}&from=${fromItem}&to=${toItem}`\r\n    );\r\n  },\r\n};\r\n//rafce\r\n//response.data.hits.\r\n////hits is array\r\n//////recipe.calories\r\n//////recipe.image\r\n//////recipe.label(name)\r\n//////recipe.health(“vegan”, “vegetarian”, “paleo”, “dairy-free”, “gluten-free”, “wheat-free”, “fat-free”, “low-sugar”, “egg-free”, “peanut-free”, “tree-nut-free”, “soy-free”, “fish-free”, “shellfish-free” (labels are per serving))\r\n//////recipe.ingredients(obj[arr])\r\n//////recipe.totalWeight\r\n\r\n//https://api.edamam.com/search?q=chicken&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&from=0&to=3&calories=591-722&health=alcohol-free\"\r\n\r\n// try {\r\n//   recipeApi.getRecipe(\"pizza\", 10, 20).then((response) => {\r\n//     console.log(response.data);\r\n//   });\r\n// } catch (err) {\r\n//   console.log(err);\r\n// }\r\n","import { recipeApi } from \"./../../api/edamamAPI\";\r\n\r\nconst initialState = {\r\n  count: 0,\r\n  fromItem: 0,\r\n  mealResultArray: [],\r\n  moreResults: true,\r\n  mealName: \"\",\r\n  toItem: 10,\r\n  err: \"\",\r\n  isFetching: false,\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"MEAL_NAME_CHANGE\":\r\n      return {\r\n        ...state,\r\n        mealName: action.mealName,\r\n      };\r\n    case \"TOGGLE_IS_FETCHING\":\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case \"SET_INCOMING_DATA\":\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case \"SET_ERROR\":\r\n      return {\r\n        ...state,\r\n        err: action.err,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst MEAL_NAME_CHANGE = \"MEAL_NAME_CHANGE\";\r\nexport const mealNameChangeAC = (mealName) => ({\r\n  type: MEAL_NAME_CHANGE,\r\n  mealName,\r\n});\r\n\r\nconst SET_ERROR = \"SET_ERROR\";\r\nconst setErrorAC = (err) => ({ type: SET_ERROR, err });\r\n\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst isFetchingAC = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\n\r\nconst SET_INCOMING_DATA = \"SET_INCOMING_DATA\";\r\nconst setIncomingAC = (\r\n  count,\r\n  fromItem,\r\n  mealResultArray,\r\n  moreResults,\r\n  toItem\r\n) => ({\r\n  type: SET_INCOMING_DATA,\r\n  payload: {\r\n    count,\r\n    fromItem,\r\n    mealResultArray,\r\n    moreResults,\r\n    toItem,\r\n  },\r\n});\r\n\r\n//const GET_RECIPES = \"GET_RECIPES\";\r\nexport const getRecipesTHUNK = () => (dispatch, getState) => {\r\n  let mealName = getState().mainReducer.mealName;\r\n  dispatch(isFetchingAC(true));\r\n  recipeApi\r\n    .getRecipe(mealName, 0, 10)\r\n    .then((response) => {\r\n      let { count, from, hits, more, to } = response.data;\r\n      dispatch(setIncomingAC(count, from, hits, more, to));\r\n      dispatch(isFetchingAC(false));\r\n    })\r\n    .catch((errors) => {\r\n      dispatch(setErrorAC(errors.message));\r\n    });\r\n};\r\n\r\nexport default mainReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport authReducer from \"../reducers/authReducer\";\r\nimport mainReducer from \"./../reducers/mainReducer\";\r\n\r\nlet redusers = combineReducers({\r\n  authReducer,\r\n  mainReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store = createStore(\r\n  redusers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect } from \"react\";\r\nimport style from \"./auth.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { validateLogin } from \"./../validation/validation\";\r\nimport logImage from \"../../assets/images/logImage.jpg\";\r\nimport {\r\n  loginAC,\r\n  passwordAC,\r\n  loginSubmitAC,\r\n  incrementFalseAttemptsAC,\r\n} from \"../../redux/reducers/authReducer\";\r\nconst Auth = (props) => {\r\n  useEffect(() => {\r\n    if (props.falseAttemptsCount === 3) {\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 3000);\r\n    }\r\n  }, [props.falseAttemptsCount]);\r\n  if (props.initialized) {\r\n    return <Redirect to={\"/main\"} />;\r\n  }\r\n  const handleLoginChange = (e) => {\r\n    props.loginAC(e.target.value);\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    props.passwordAC(e.target.value);\r\n  };\r\n  const handleLoginSubmit = () => {\r\n    validateLogin(\r\n      props.login,\r\n      props.password,\r\n      props.loginSubmitAC,\r\n      props.incrementFalseAttemptsAC\r\n    );\r\n    props.loginAC(\"\");\r\n    props.passwordAC(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className={style.authContainer}>\r\n      <div className={style.imgInputContainer}>\r\n        <div className={style.inputContainer}>\r\n          <p>Please log in to your account by typing </p>\r\n          <p>Bon appetit</p>\r\n          <input\r\n            type=\"text\"\r\n            value={props.login}\r\n            onChange={handleLoginChange}\r\n            placeholder=\"login\"\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"password\"\r\n            value={props.password}\r\n            onChange={handlePasswordChange}\r\n            placeholder=\"password\"\r\n          />{\" \"}\r\n          <br />\r\n          <button\r\n            onClick={handleLoginSubmit}\r\n            disabled={props.falseAttemptsCount === 3}\r\n          >\r\n            Log in\r\n          </button>\r\n        </div>\r\n        <div className={style.logImageContainer}>\r\n          <img src={logImage} alt=\"logImage\" />\r\n          <p className={style.centeredText}>Welcome Back</p>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {props.falseAttemptsCount === 3 && <h1>WRONG LOGIN OR PASSWORD</h1>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.authReducer.initialized,\r\n  login: state.authReducer.login,\r\n  password: state.authReducer.password,\r\n  falseAttemptsCount: state.authReducer.falseAttemptsCount,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  loginAC,\r\n  passwordAC,\r\n  loginSubmitAC,\r\n  incrementFalseAttemptsAC,\r\n})(Auth);\r\n\r\n///http://www.recipepuppy.com/about/api/\r\n///http://www.recipepuppy.com/api/?i=onions,garlic&q=omelet&p=3\r\n","export const validateLogin = (login, password, CORRECT, WRONG) => {\r\n  const LOGIN = \"Bon\";\r\n  const PASSWORD = \"appetit\";\r\n  if (LOGIN === login && PASSWORD === password) {\r\n    CORRECT(true);\r\n  } else {\r\n    WRONG();\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  initialized: state.authReducer.initialized,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    return (\r\n      <div>\r\n        {!props.initialized ? (\r\n          <Redirect to={\"/login\"} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./lists.module.scss\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst ListItemsContainer = (props) => {\r\n  let {\r\n    image,\r\n    label,\r\n    calories,\r\n    totalWeight,\r\n    shareAs,\r\n    ingredientLines,\r\n  } = props.recipe;\r\n  let [toggle, setToggle] = useState(false);\r\n  return (\r\n    <div className={styles.listItemsContainer}>\r\n      <div className={styles.mealImageContainer}>\r\n        <img src={image} alt=\"mealImage\" />\r\n      </div>\r\n      <div className={styles.mealIngredientsContainer}>\r\n        <p>name:{label}</p>\r\n        <p>calories:{calories}</p>\r\n        <p>total weight:{totalWeight}</p>\r\n        {toggle && (\r\n          <div>\r\n            <a href={shareAs} target=\"blank\">\r\n              More detailed information\r\n            </a>\r\n            <br />\r\n            ingredientLines\r\n            {ingredientLines.map((ingredient) => (\r\n              <ul key={uuidv4()}>\r\n                <li>{ingredient}</li>\r\n              </ul>\r\n            ))}\r\n          </div>\r\n        )}\r\n        <button onClick={() => setToggle(!toggle)}>\r\n          {toggle ? \"hide\" : \"show\"} details\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ListItemsContainer;\r\n","import React from \"react\";\r\nimport style from \"./lists.module.scss\";\r\nimport ListItemsContainer from \"./ListItemsContainer\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Lists = ({ recipes }) => {\r\n  console.log(recipes);\r\n  return (\r\n    <div className={style.listsContainer}>\r\n      {recipes &&\r\n        recipes.map((recipe) => (\r\n          <ListItemsContainer recipe={recipe.recipe} key={uuidv4()} />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React from \"react\";\r\nimport style from \"./main.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/authorization/authorization\";\r\nimport Lists from \"./../lists/Lists\";\r\nimport {\r\n  mealNameChangeAC,\r\n  getRecipesTHUNK,\r\n} from \"./../../redux/reducers/mainReducer\";\r\n\r\nconst Main = (props) => {\r\n  return (\r\n    <div className={style.mainContainer}>\r\n      <Lists recipes={props.mealResultArray} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  mealName: state.mainReducer.mealName,\r\n  mealResultArray: state.mainReducer.mealResultArray,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { mealNameChangeAC, getRecipesTHUNK }),\r\n  withAuthRedirect\r\n)(Main);\r\n","import React from \"react\";\r\nimport style from \"./ownRecipe.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/authorization/authorization\";\r\nimport { compose } from \"redux\";\r\n\r\nconst OwnRecipe = (props) => {\r\n  return <div className={style.ownRecipe}>own recipe</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  //initialized: state.authReducer.initialized,\r\n});\r\nexport default compose(\r\n  connect(mapStateToProps, {}),\r\n  withAuthRedirect\r\n)(OwnRecipe);\r\n","import React from \"react\";\r\nimport style from \"./search.module.scss\";\r\n\r\nfunction Search({ mealNameChangeAC, getRecipesTHUNK, mealName, initialized }) {\r\n  const handleNameChange = (e) => {\r\n    mealNameChangeAC(e.target.value);\r\n  };\r\n  const handleMealSearch = () => {\r\n    if (mealName) {\r\n      getRecipesTHUNK();\r\n      mealNameChangeAC(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className={style.searchContainer}>\r\n      <input\r\n        type=\"text\"\r\n        value={mealName}\r\n        onChange={handleNameChange}\r\n        placeholder=\"You look hungry\"\r\n      />\r\n      <button onClick={handleMealSearch}> HUNT </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport style from \"./navBar.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginSubmitAC } from \"./../../redux/reducers/authReducer\";\r\nimport Search from \"./../search/Search\";\r\n\r\nconst NavBar = (props) => {\r\n  const handleLogout = () => {\r\n    props.loginSubmitAC(false);\r\n  };\r\n  return (\r\n    <div className={style.navBarContainer}>\r\n      <div className={style.logoContainer}>LOGO</div>\r\n      <div className={style.menuContainer}>\r\n        <Navigation link=\"/main\" content=\"Main\" />\r\n        <Navigation link=\"/ownRecipe\" content=\"Own recipe\" />\r\n        {props.initialized ? (\r\n          <span onClick={handleLogout} className={style.navItem}>\r\n            Log out\r\n          </span>\r\n        ) : (\r\n          <Navigation link=\"/login\" content=\"Login\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    <div className={style.navItem}>\r\n      <NavLink to={props.link} activeClassName={style.activeLink}>\r\n        {props.content}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.authReducer.initialized,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginSubmitAC })(NavBar);\r\n","import React from \"react\";\r\nimport NavBar from \"./../navigation/Navbar\";\r\nimport Search from \"./../search/Search\";\r\nimport style from \"./header.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  mealNameChangeAC,\r\n  getRecipesTHUNK,\r\n} from \"./../../redux/reducers/mainReducer\";\r\nconst Header = (props) => {\r\n  return (\r\n    <div className={style.headerContainer}>\r\n      <NavBar />\r\n      {props.initialized && <Search {...props} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  mealName: state.mainReducer.mealName,\r\n  initialized: state.authReducer.initialized,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { mealNameChangeAC, getRecipesTHUNK })\r\n)(Header);\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"./components/auth/Auth\";\nimport Main from \"./components/main/Main\";\nimport OwnRecipe from \"./components/own/OwnRecipe\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport Header from \"./components/header/Header\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/login\" component={() => <Auth />} />\n        <Route path=\"/main\" component={() => <Main />} />\n        <Route path=\"/ownRecipe\" component={() => <OwnRecipe />} />\n      </Switch>\n    </div>\n  );\n}\n\n// const mapStateToProps = (state) => ({\n//   initialized: state.authReducer.initialized,\n// });\n// export default connect(mapStateToProps)(App);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/redux-store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./assets/Roboto/Roboto-Regular.ttf\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}